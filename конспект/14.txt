Удаление поста, который мы передали аргументом в коллбек удаления поста. Используем функцию .filter, которая вернет новый массив, отфильтрованный по какому то условию. В данном случае проверяем id, если id поста из массива равен тому id который мы передали аргументом, то мы его просто удаляем.

Передаем в setPost отфильтрованный массив, где мы не пропускаем элемент где id в массиве равен id из аргумента.
То есть в новый массив попадают все элементы, где p.id не равен post.id.
const removePost = (post) => {
    setPosts(posts.filter(p => p.id !== post.id))
}

Затем объявляем свойство remove и передаем в него название функции
<PostList remove={removePost} posts={posts} title={"Языки программирования"} />

Затем в дочернем элементе передаем дальше функцию, объявляем свойство в которое передаем функцию
{props.posts.map((post, index) => {
    return <PostItem remove={props.remove} number={index + 1} post={post} key={post.id} />
})}

Затем объявляем событие onClick, где создаем стрелочную функцию, в которой вызываем функцию для удаления поста, и передаем аргументом id поста. При клике будет сработано событие, и будет вызвана стрелочная функция, которая в свою очередь вызовет функцию удаления поста с определенным id
<MyButton onClick={() => props.remove(props.post)}>Удалить</MyButton>